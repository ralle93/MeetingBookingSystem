//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BookingWebApp.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MeetingDTO", Namespace="http://schemas.datacontract.org/2004/07/BookingService.Models")]
    [System.SerializableAttribute()]
    public partial class MeetingDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTime {
            get {
                return this.DateTimeField;
            }
            set {
                if ((this.DateTimeField.Equals(value) != true)) {
                    this.DateTimeField = value;
                    this.RaisePropertyChanged("DateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IBookingService")]
    public interface IBookingService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/GetWeekMeetings", ReplyAction="http://tempuri.org/IBookingService/GetWeekMeetingsResponse")]
        BookingWebApp.ServiceReference.MeetingDTO[] GetWeekMeetings(System.DateTime startDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/GetWeekMeetings", ReplyAction="http://tempuri.org/IBookingService/GetWeekMeetingsResponse")]
        System.Threading.Tasks.Task<BookingWebApp.ServiceReference.MeetingDTO[]> GetWeekMeetingsAsync(System.DateTime startDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/AddMeeting", ReplyAction="http://tempuri.org/IBookingService/AddMeetingResponse")]
        bool AddMeeting(BookingWebApp.ServiceReference.MeetingDTO meeting);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/AddMeeting", ReplyAction="http://tempuri.org/IBookingService/AddMeetingResponse")]
        System.Threading.Tasks.Task<bool> AddMeetingAsync(BookingWebApp.ServiceReference.MeetingDTO meeting);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/RemoveMeetingFromId", ReplyAction="http://tempuri.org/IBookingService/RemoveMeetingFromIdResponse")]
        bool RemoveMeetingFromId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/RemoveMeetingFromId", ReplyAction="http://tempuri.org/IBookingService/RemoveMeetingFromIdResponse")]
        System.Threading.Tasks.Task<bool> RemoveMeetingFromIdAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBookingServiceChannel : BookingWebApp.ServiceReference.IBookingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BookingServiceClient : System.ServiceModel.ClientBase<BookingWebApp.ServiceReference.IBookingService>, BookingWebApp.ServiceReference.IBookingService {
        
        public BookingServiceClient() {
        }
        
        public BookingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BookingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BookingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BookingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public BookingWebApp.ServiceReference.MeetingDTO[] GetWeekMeetings(System.DateTime startDate) {
            return base.Channel.GetWeekMeetings(startDate);
        }
        
        public System.Threading.Tasks.Task<BookingWebApp.ServiceReference.MeetingDTO[]> GetWeekMeetingsAsync(System.DateTime startDate) {
            return base.Channel.GetWeekMeetingsAsync(startDate);
        }
        
        public bool AddMeeting(BookingWebApp.ServiceReference.MeetingDTO meeting) {
            return base.Channel.AddMeeting(meeting);
        }
        
        public System.Threading.Tasks.Task<bool> AddMeetingAsync(BookingWebApp.ServiceReference.MeetingDTO meeting) {
            return base.Channel.AddMeetingAsync(meeting);
        }
        
        public bool RemoveMeetingFromId(int id) {
            return base.Channel.RemoveMeetingFromId(id);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveMeetingFromIdAsync(int id) {
            return base.Channel.RemoveMeetingFromIdAsync(id);
        }
    }
}
